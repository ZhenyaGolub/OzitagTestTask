{"version":3,"sources":["validate.js","utils.js","components/SignIn.jsx","pages/Authorization.jsx","context.js","pages/User.jsx","App.js","index.js"],"names":["validate","values","errors","email","test","password","length","getUserInformation","a","tokenType","accessToken","fetch","headers","response","json","user","SignIn","authentication","submitBtnRef","useRef","useState","wrong","setWrong","formik","useFormik","initialValues","onSubmit","loader","method","body","JSON","stringify","clientId","res","data","loaderState","current","classList","add","remove","action","className","handleSubmit","htmlFor","type","name","id","onInput","handleChange","onBlur","handleBlur","value","touched","ref","Authorization","showUser","AuthContext","React","createContext","User","logout","useContext","onClick","App","isAuth","setIsAuth","setUser","Provider","CSSTransition","in","timeout","classNames","unmountOnExit","token","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61a1124f.chunk.js","sourcesContent":["export const validate = values => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Please fill in the field';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Please fill in the field';\r\n    } else if (values.password.length < 4) {\r\n        errors.password = 'Must be 4 characters or more';\r\n    } else if(values.password.length > 20){\r\n        errors.password = 'Must be 20 characters or less';\r\n    }\r\n  \r\n    return errors;\r\n};","export const getUserInformation = async ({ tokenType, accessToken }) => {\r\n    const response = await fetch('https://tager.dev.ozitag.com/api/tager/user/profile', {\r\n        headers: {\r\n            'Authorization': `${tokenType} ${accessToken}`\r\n        }\r\n    });\r\n\r\n    const user = await response.json();\r\n    return user;\r\n}","import React, { useRef, useState } from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { validate } from '../validate';\r\nimport { getUserInformation } from '../utils';\r\n\r\n\r\nexport const SignIn = ({ authentication }) => {\r\n\r\n    const submitBtnRef = useRef();\r\n\r\n    const [wrong, setWrong] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        validate,\r\n        onSubmit: async values => {\r\n          try{\r\n            loader(true);\r\n            const response = await fetch('https://tager.dev.ozitag.com/api/auth/user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify({\r\n                    ...values,\r\n                    clientId: 1\r\n                })\r\n            });\r\n            loader(false);\r\n            const res = await response.json();\r\n            const user = await getUserInformation(res.data);\r\n            authentication(user, res.data.tokenType, res.data.accessToken);\r\n            setWrong(false);\r\n        } catch(e){\r\n            loader(false);\r\n            setWrong(true);\r\n        }\r\n        },\r\n    });\r\n\r\n    const loader = (loaderState) => {\r\n        if(loaderState){\r\n            submitBtnRef.current.classList.add('animate__animated', 'animate__shakeX', 'animate__infinite', 'infinite');\r\n        } else if(!loaderState){\r\n            submitBtnRef.current.classList.remove('animate__animated', 'animate__shakeX', 'animate__infinite', 'infinite');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form action=\"post\" className=\"sign-in\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"data\">\r\n            <div className=\"row\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onInput={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.email}/>\r\n                {formik.touched.email && formik.errors.email ? <div className=\"error\">{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div className=\"row\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onInput={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.password}/>\r\n                {formik.touched.password && formik.errors.password ? <div className=\"error\">{formik.errors.password}</div> : null}\r\n            </div>\r\n            </div>\r\n            <button type=\"submit\" ref={submitBtnRef}>Sign in</button>\r\n                {wrong ? <p className=\"wrong\">Wrong email or password entered</p> : null}\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SignIn } from '../components/SignIn'\r\n\r\nexport const Authorization = ({ showUser }) => {\r\n    return (\r\n        <div className=\"authorization\">\r\n            <SignIn authentication={showUser}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const AuthContext = React.createContext();","import React, { useContext, useState } from 'react'\r\nimport { AuthContext } from '../context';\r\n\r\nexport const User = ({ user, logout }) => {\r\n        \r\n    const isAuth = useContext(AuthContext);\r\n\r\n    if(!isAuth){\r\n        return null;\r\n    }\r\n\r\n    if(user !== null){\r\n        return (\r\n            <div className=\"user\">\r\n                <button className=\"exit\" onClick={logout}>Exit</button>\r\n                <h1>User information</h1>\r\n                <div className=\"user__information\">\r\n                    <h2>Username: {user.name}</h2>\r\n                    <h2>Email: {user.email}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { useState } from 'react';\nimport { Authorization } from './pages/Authorization';\nimport { User } from './pages/User';\n\nimport { AuthContext } from './context';\n\nimport { CSSTransition } from 'react-transition-group';\n\nconst App = () => {\n  \n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const authentication = ({data: {email, name}}, type, token) => {\n    setUser({\n      email,\n      name,\n      type,\n      token\n    });\n    setIsAuth(true);\n  }\n\n  const logoutUser = () => {\n    setIsAuth(false);\n  }\n\n  return (\n    <AuthContext.Provider value={isAuth}>\n      <CSSTransition in={isAuth} timeout={300} classNames=\"animation\" unmountOnExit>\n        <User user={user} logout={logoutUser}/>\n      </CSSTransition>\n      <CSSTransition in={!isAuth} timeout={300} classNames=\"animation\" unmountOnExit>\n        <Authorization showUser={authentication}/>\n      </CSSTransition>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport 'animate.css';\nimport './styles/main.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}